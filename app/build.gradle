apply plugin: 'com.android.application'
apply plugin: 'idea'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.ashiana.zlifno.alder"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 9
        versionName "1.0-alpha08"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    // ViewModel and LiveData
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    // alternatively, just ViewModel
    implementation 'android.arch.lifecycle:viewmodel:1.1.1'
    // alternatively, just LiveData
    implementation 'android.arch.lifecycle:livedata:1.1.1'
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
    // Room (use 1.1.0-beta2 for latest beta)
    implementation 'android.arch.persistence.room:runtime:1.0.0'
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"
    // Paging
    implementation 'android.arch.paging:runtime:1.0.0-beta1'
    // Test helpers for LiveData
    testImplementation 'android.arch.core:core-testing:1.1.1'
    // Test helpers for Room
    testImplementation 'android.arch.persistence.room:testing:1.0.0'
    // https://github.com/victorminerva/AutoResizeEditText
    implementation 'com.github.victorminerva:AutoResizeEditText:0.1.0'
    // https://github.com/rengwuxian/MaterialEditText
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    // https://github.com/Muddz/StyleableToast
    implementation 'net.opacapp:multiline-collapsingtoolbar:27.1.1'
    // https://github.com/leinardi/FloatingActionButtonSpeedDial
    implementation 'com.github.leinardi:FloatingActionButtonSpeedDial:1.0-alpha04'
    // https://github.com/airbnb/lottie-android
    implementation 'com.airbnb.android:lottie:2.5.4'
    // http://jakewharton.github.io/butterknife/
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // https://github.com/skyfishjy/android-ripple-background
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    // https://github.com/ViksaaSkool/AwesomeSplash
    implementation 'com.github.ViksaaSkool:AwesomeSplash:v1.0.0'

    // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
// Because RxAndroid releases are few and far between, it is recommended you also
// explicitly depend on RxJava's latest version for bug fixes and new features.
// (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    compileOnly 'com.google.auto.value:auto-value:1.2'
    annotationProcessor 'com.google.auto.value:auto-value:1.2'
}


android {
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}